name: Release

on:
  release:
    types: [published]   # runs when a Release is published

jobs:
  release:
    name: Prepare & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check Git Username/Email
        run: |
          git config --local user.email || git config --global user.email "github-actions@example.com"
          git config --local user.name || git config --global user.name "github-actions"
        
      - name: Check package-lock.json existence
        id: lockfile-check
        run: |
          if [ -f package-lock.json ]; then
            echo "lockfile found"
            echo ::set-output name=exists::true
          else
            echo "lockfile not found"
            echo ::set-output name=exists::false
          fi

      - name: Install dependencies with npm ci (lockfile found)
        if: steps.lockfile-check.outputs.exists == 'true'
        run: |
          npm ci --prefer-offline --no-audit --no-fund

      - name: Install dependencies and add package-lock (lockfile NOT found)
        if: steps.lockfile-check.outputs.exists == 'false'
        run: |
          # 1. Install and generate lockfile
          npm install --prefer-offline --no-audit --no-fund

          # 2. Create and switch to temporary branch
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          TEMP_BRANCH="patch-add-lockfile-$(date +%s)"
          git checkout -b "$TEMP_BRANCH"

          # 3. Add package-lock.json and commit
          git add -A
          git commit -m "[CI] Add package-lock.json automatically"

          # 4. Push to origin
          git push origin "$TEMP_BRANCH"

          # 5. Cherry-pick commit onto the original branch
          git checkout "$CURRENT_BRANCH"
          git cherry-pick "$TEMP_BRANCH"

          # 6. Remove temporary branch locally and remotely
          git branch -D "$TEMP_BRANCH"
          git push origin --delete "$TEMP_BRANCH"

      - name: Build
        run: |
          npm run build

      - name: List build artifacts
        run: |
          ls -la dist || true

      - name: Upload JS asset to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
