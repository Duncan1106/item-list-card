name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Build & attach asset
    runs-on: ubuntu-latest
    permissions:
      contents: write   # allows commits + release uploads

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: main

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm install --no-audit --no-fund

      - name: Update lockfile
        run: npm install --package-lock-only

      - name: Commit package-lock.json when missing
        run: |
          if git status --porcelain | grep -q package-lock.json; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add package-lock.json
            git commit -m "chore: generate package-lock.json [skip ci]"
            git push
          fi

      - name: Build
        run: |
          npm run clean
          npm run build:dev

      - name: Commit built dist file (force-add ignored file)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if [ ! -f dist/item-list-card.js ]; then
            echo "dist/item-list-card.js not found; skipping commit."
            exit 0
          fi

          # force add ignored dist file
          git add -f dist/item-list-card.js

          # only continue if there are staged changes
          if git diff --cached --quiet; then
            echo "No changes to dist/item-list-card.js; skipping commit."
            exit 0
          fi

          git commit -m "chore: add dist/item-list-card.js [skip ci]"

          # Ensure weâ€™re on the main branch and up-to-date
          git fetch origin main
          git checkout main
          git reset --hard origin/main

          echo "Pushing built file commit to origin/main"
          git push origin main

      - name: Update CHANGELOG.md with release notes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          TAG_NAME="${{ github.event.release.tag_name }}"
          RELEASE_BODY="${{ github.event.release.body }}"

          # Create new section header (date in UTC)
          NEW_SECTION="## [${TAG_NAME}] - $(date -u +%Y-%m-%d)\n\n### Added\n\n### Changed\n\n### Fixed\n\n### Removed\n\n[${TAG_NAME}]: https://github.com/Duncan1106/item-list-card/releases/tag/${TAG_NAME}\n"

          # If release body provided, append it under 'Release Notes'
          if [ -n "$RELEASE_BODY" ]; then
            NEW_SECTION="${NEW_SECTION}\n### Release Notes\n${RELEASE_BODY}\n"
          fi

          # Insert new section before [Unreleased] or append if not present
          if grep -q "^## \\[Unreleased\\]" CHANGELOG.md; then
            # Use awk to insert multiline variable before the first Unreleased header
            awk -v n="$NEW_SECTION" 'BEGIN{printn=1} { if(printn && $0 ~ /^## \[Unreleased\]/){ print n; print $0; printn=0; next } print }' CHANGELOG.md > CHANGELOG.md.new && mv CHANGELOG.md.new CHANGELOG.md
          else
            echo -e "$NEW_SECTION" >> CHANGELOG.md
          fi

          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to CHANGELOG.md; skipping commit."
          else
            git commit -m "docs: update CHANGELOG.md for ${TAG_NAME} [skip ci]"
            git push origin main
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/item-list-card.js
